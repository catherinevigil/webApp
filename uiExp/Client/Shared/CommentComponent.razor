
@using uiExp.Shared
@using System;
@using System.Collections.Generic;
@inject NavigationManager NavigationManager
@inject IJSRuntime js


@code{

    [Parameter]
    public Comment commentI { get; set; }

    public void dump(object a)
    {
        DumpityDump.Dump(a); //this will print a json of the  object's properties/values to the console
    }

    public int BottomFadeOffset;
    public int FadeInAnchorP;
    public bool showAllLines = false;
    public int bubbleNum => commentI.GetBubbles().Count;

    public String GetShowText()
    {
        if (bubbleNum == 2)
        {
            return "See one more line...";
        }
        else
        {
            return "See " + (bubbleNum - 1).ToString() + " more lines...";
        }
        //Console.WriteLine(commentI.getColor());
    }

    public String GetInputPlaceholder()
    {
        return "Send reply to " + this.commentI.GetCommenterFirstName() + "'s inbox...";
    }
    public String color => commentI.getColor();

}

<div class="comment">
    <div class="commenter-photo-div">
        <LinkedImage Conversant="@commentI.GetCommenter()"></LinkedImage>
    </div>
    <div class="comment-div">
        <div class="comment-tight-div"
            <p style="text-align:center; color:lightgray" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="60" data-aos-anchor-placement="@FadeInAnchorP">
                <span data-aos="slow-partial-fade" data-aos-duration="600" data-aos-offset="-100px" data-aos-anchor-placement="top-top" style="color:lightgray">
                    <LinkedName Conversant="@commentI.GetCommenter()"></LinkedName>
                </span>
            </p>
            <p class="comment-text aos-init" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="@BottomFadeOffset" data-aos-anchor-placement="@FadeInAnchorP">
                <span style="background-color:@color">@commentI.GetFirstText()</span>
            </p>

            @if (showAllLines)
            {
                for (int i = 1; i < bubbleNum; i++)
                {
                    <p class="comment-text aos-init" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="@BottomFadeOffset" data-aos-anchor-placement="@FadeInAnchorP">
                        <span style="background-color:@color"> @commentI.GetBubbles()[i].Text</span>
                    </p>
                }
            }
            <div class="comment-actions">
                @if (!showReplyInput && !replied){
                    <span @onclick="OnReplyClick" class="action">Reply</span>
                }
                @if (!(bubbleNum == 1) && !showAllLines)
                {
                    <span class="action" @onclick="()=> showAllLines=true">@GetShowText()</span>
                }
            </div>
        @if (replied == true)
        {
            <div class="comment-actions">
                <span style="color:white" @onclick="NavToInbox" class="action">View reply in inbox...</span>
            </div>
        }
        </div>
        @if (showReplyInput)
        {
            <div class="input-container">
                <textarea placeholder="@GetInputPlaceholder()" class="comment-reply-message-input" style="resize:none" @bind="reply" rows="1" oninput="this.style.height = 'auto'; this.style.height = (this.scrollHeight) + 'px';" />
                <i class="fas fa-arrow-up icon sendButton action" @onclick="submitReply"></i>
            </div>
            <div class="comment-actions">
                <span class="action" @onclick="()=> showReplyInput=false">hide</span>
            </div>
        }
        
    </div>
</div>

@code{
    public bool showReplyInput = false;
    private String reply { get; set; }
    private bool replied = false;
    private void OnReplyClick()
    {
        showReplyInput = true;
        showAllLines = true;
    }
    private void NavToInbox()
    {
        NavigationManager.NavigateTo("/inbox");
    }
    private void submitReply()
    {
        //commentI.AddReply(CurrentUser.GetUser());
        showReplyInput = false;
        replied = true;
        Console.WriteLine(reply);
    }
}