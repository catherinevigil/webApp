@page "/convo/{convoNum}"
@using uiExp.Shared
@inject HttpClient Http
@inject IJSRuntime JS
@using System.Net.Http


@code{
    [Parameter]
    public String convoNum { get; set; }
    //public int convoInt { get; set; }

    protected override void OnInitialized()
    {
        //the param will be set now
        convoNum = convoNum ?? "2";
    }

    public int getConversationNum()
    {
        return Int32.Parse(convoNum);

    }

    public String getClass(Boolean leftMessage)
    {
        if (leftMessage)
            return ("message message-left aos-init");
        else
            return ("message message-right aos-init");

    }

    public String getAlign(Boolean left)
    {
        if (left)
            return "left";
        else
            return "right";
    }

    public String getConversant(bool even, Conversation conversation)
    {

        if (even)
            return conversation.Conversants.First().GetName();
        else
            return conversation.Conversants.Last().GetName();
    }

    //static String[] testlist = new String[] { "eli:", "helloworld", "kush:", "hello eli" };

    PublicConvo convo => LoadFeedConvos.ConvoList[getConversationNum()];
    Conversation conversation => convo.GetConversation();//LoadConvos.linesList[1]
    Comments comments => LoadFeedConvos.ConvoList[getConversationNum()].GetComments();

    public void ShowData()
    {
        Console.WriteLine("hello");
        // var stringWhole = String.Concat(LoadConvos.ConvoList[getConversationNum()]);
        // Console.WriteLine(stringWhole); //this will print a json of the feed object's properties/values to the console
    }

    public int i = 0;
    public String TopFadeOffset = "-100";
    public String BottomFadeOffset = "100";
    public String TopFadeOutAnchorP = "center-top";
    public String FadeInAnchorP = "center-bottom";

    public bool selectorRight = false;

    public void SwitchLeft()
    {

        selectorRight = false;
    }
    public void SwitchRight()
    {

        selectorRight = true;
    }

    @*public String GetSelector()
        {
            if (selectorRight)
            {
                return "right";
            }
            else
            {
                return "left";
            }
        }*@

    public String GetLeftColor()
    {
        if (selectorRight)
        {
            return "white";
        }
        else
        {
            return "black";
        }
    }
    public String GetRightColor()
    {
        if (selectorRight)
        {
            return "black";
        }
        else
        {
            return "white";
        }
    }
    public string GetPicClass(bool left)
    {
        if (left) { return "small-profile-convo-left"; }
        else { return "small-profile-convo-right"; }
    }


}
<!--this is code for displaying a conversation-->
<body id="page" data-aos-easing="ease" data-aos-duration="600" data-aos-delay="0">
    <div class="page-content">
        <section class="aos-init hold-m-and-p" data-aos-once="false" data-aos-duration="600" id="content-container">
            <div class="messages">
                @foreach (var group in conversation.Groups)
                {
                    <div class="message-group">
                        <div style="width:100%;text-align:@getAlign(group.Left); color:lightgray" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="60" data-aos-anchor-placement="@FadeInAnchorP">
                            <div data-aos="slow-partial-fade" data-aos-duration="600" data-aos-offset="-100px" data-aos-anchor-placement="top-top" style="color:lightgray">
                                <LinkedName Conversant="@group.Texter" NameType=2></LinkedName>
                            </div>
                        </div>
                        @foreach (var message in group.Messages)
                        {
                            <p class=@getClass(group.Left) data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="@BottomFadeOffset" data-aos-anchor-placement="@FadeInAnchorP">
                                <span data-aos="out" data-aos-duration="600" data-aos-offset="@TopFadeOffset" data-aos-anchor-placement="@TopFadeOutAnchorP">
                                    @message.Text
                                </span>
                            </p>
                        }
                        @*<img src="@group.Texter.GetImg()" class="@GetPicClass(group.Left)"/>*@
                    </div>
                    i++;
                }
            </div>
            <hr style="border-top:1px solid lightgray" />
            <div class="bottom-float action">
                @* text should appear black when selector is over it but text is hidden. z indexing not working :/*@

                <div class="feed-name-container action" @onclick="SwitchLeft" style="color:@GetLeftColor(); background-color:@GetRightColor();">
                    lines
                </div>
                <div class="feed-name-container action" @onclick="SwitchRight" style="color:@GetRightColor(); background-color:@GetLeftColor();">
                    threads
                </div>
            </div>
            @if (!selectorRight)
            {
                <div class="comments">
                    @foreach (var comment in comments.GetComments())
                    {
                        <CommentComponent commentI=comment></CommentComponent>
                    }
                </div>
            }
            else
            {
                @code{
                    public Feed feed => new uiExp.Shared.Feed(convo.GetReplyConvoNumbers());
                }
                <ThreadFeed ConvoList="@feed.GetConvoList()"></ThreadFeed>
            }
        </section>
    </div>
</body>



@code{
    protected override async Task OnParametersSetAsync()
    {
        //await JS.InvokeVoidAsync("scrollToTop");
        //StateHasChanged();
    }
}

@*<hr style="border-top:2px solid white" />*@
<!--<div class="comment">
    <div class="commenter-photo-div">
        <img src="@(comment.GetCommenterImg())" class="profile-pic">
    </div>
    <div class="comment-div">
        <p style="text-align:center; color:lightgray" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="60" data-aos-anchor-placement="@FadeInAnchorP">
            <span data-aos="slow-partial-fade" data-aos-duration="600" data-aos-offset="-100px" data-aos-anchor-placement="top-top" style="color:lightgray">
                @comment.GetCommenterName()
            </span>
        </p>
        <p class="comment-text aos-init" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="@BottomFadeOffset" data-aos-anchor-placement="@FadeInAnchorP">
            <span data-aos="out" data-aos-duration="600" data-aos-offset="@TopFadeOffset" data-aos-anchor-placement="@TopFadeOutAnchorP">-->
@*@comment.GetText()*@
<!--</span>
        </p>
    </div>
</div>-->
