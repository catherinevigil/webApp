
@page "/kushconvo"

@using uiExp.Shared
@using System;
@using System.Collections.Generic;
@using System.ComponentModel
@using System.ComponentModel.Design
@using System.Linq;
@using System.Net
@using System.Text
@using System.IO;
@inject HttpClient Http
@using System.Net.Http

@code{




    public String getClass(Boolean left)
    {
        if (left)
            return ("message message-left aos-init");
        else
            return ("message message-right aos-init");

    }
    public String getAlign(Boolean left)
    {
        if (left)
            return "left";
        else
            return "right";
    }

    public String getConversant(bool even, Conversation conversation)
    {

        if (even)
            return conversation.Conversants.First();
        else
            return conversation.Conversants.Last();
    }

    @*private static Conversation SeperateConvo2(string[] lines)
    {
        //Console.WriteLine("seperate was called");
        var convo = new Conversation();
        for (int i = 0; i < lines.Length; i++)
        {
            if (lines[i].Contains(":"))
            {
                var name = lines[i].Remove(lines[i].Length - 1);
                if (!convo.Conversants.Any())//if list does not have any elements
                {
                    convo.Conversants.Add(name);
                    Console.WriteLine("added conversant" + convo.Conversants.Last());
                }
                else
                {
                    if (convo.Conversants.IndexOf(name) == -1)
                        convo.Conversants.Add(name);
                    Console.WriteLine("added conversant" + convo.Conversants.Last());
                }


                convo.Groups.Add(new MessageGroup());
            }
            else
            {
                convo.Groups.Last().Messages.Add(new Message(lines[i]));
            }

        }
        return convo;



    }*@

    //static String[] testlist = new String[] { "eli:", "helloworld", "kush:", "hello eli" };
    Conversation convo = new Conversation(LoadConvos.linesList[1]);//LoadConvos.linesList[1]

    public void ShowData()
    {
        Console.WriteLine("hello");
        var stringWhole = String.Concat(LoadConvos.linesList[0]);
        Console.WriteLine(stringWhole); //this will print a json of the feed object's properties/values to the console
    }

    public int i = 0;

}

<button type="button" class="btn btn-primary"
        @onclick="ShowData">
</button>

<!--this is code for displaying a conversation-->
<body id="page" data-aos-easing="ease" data-aos-duration="600" data-aos-delay="0">
    <div class="page-content">
        <section class="aos-init " data-aos-once="false" data-aos-duration="600" data-aos-offset="125" id="content-container">
            <div class="messages">
                @foreach (var group in convo.Groups)
                {<div class="message-group">
                        <p style="text-align:@getAlign(i % 2 == 0);" data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="125" data-aos-anchor-placement="bottom-bottom">
                            <span data-aos="out" data-aos-duration="600" data-aos-offset="75" data-aos-anchor-placement="top-top">
                                @getConversant(i % 2 == 0, convo)
                            </span>
                        </p>
                        @foreach (var message in group.Messages)
                        {
                            <p class=@getClass(i % 2 == 0) data-aos="fade" data-aos-once="false" data-aos-duration="600" data-aos-offset="125" data-aos-anchor-placement="bottom-bottom">
                                <span data-aos="out" data-aos-duration="600" data-aos-offset="0" data-aos-anchor-placement="top-top">
                                    @message.Text
                                </span>
                            </p>
                        }
                    </div>
                    i++;
                }

            </div>
        </section>
    </div>
</body>